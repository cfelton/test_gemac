// File: m_fifo_short_w36.v
// Generated by MyHDL 0.9dev
// Date: Mon Jul 21 18:53:12 2014


`timescale 1ns/10ps

module m_fifo_short_w36 (
    clock,
    reset,
    clear,
    datain,
    src_rdy_i,
    dst_rdy_o,
    dataout,
    src_rdy_o,
    dst_rdy_i
);


input clock;
input reset;
input clear;
input [35:0] datain;
input src_rdy_i;
output dst_rdy_o;
wire dst_rdy_o;
output [35:0] dataout;
wire [35:0] dataout;
output src_rdy_o;
wire src_rdy_o;
input dst_rdy_i;

reg fbus_empty;
wire rd;
wire wr;
reg fbus_full;
reg [4:0] gfifo_nvacant;
reg [3:0] gfifo_addr;
wire gfifo_fbus_rvld;
reg [4:0] gfifo_ntenant;

reg [35:0] gfifo_mem [0:16-1];





assign wr = (src_rdy_i & dst_rdy_o);
assign rd = (dst_rdy_i & src_rdy_o);



assign dst_rdy_o = (!fbus_full);
assign src_rdy_o = (!fbus_empty);


always @(posedge clock) begin: M_FIFO_SHORT_W36_GFIFO_RTL_SRL_IN
    integer ii;
    if (wr) begin
        gfifo_mem[0] <= datain;
        for (ii=1; ii<16; ii=ii+1) begin
            gfifo_mem[ii] <= gfifo_mem[(ii - 1)];
        end
    end
end



assign dataout = gfifo_mem[gfifo_addr];



assign gfifo_fbus_rvld = rd;


always @(posedge clock, posedge reset) begin: M_FIFO_SHORT_W36_GFIFO_RTL_FIFO
    if (reset == 1) begin
        fbus_empty <= 1;
        fbus_full <= 0;
        gfifo_addr <= 0;
    end
    else begin
        if (clear) begin
            gfifo_addr <= 0;
            fbus_empty <= 1'b1;
            fbus_full <= 1'b0;
        end
        else if ((rd && (!wr))) begin
            fbus_full <= 1'b0;
            if ((gfifo_addr == 0)) begin
                fbus_empty <= 1'b1;
            end
            else begin
                gfifo_addr <= (gfifo_addr - 1);
            end
        end
        else if ((wr && (!rd))) begin
            fbus_empty <= 1'b0;
            if ((!fbus_empty)) begin
                gfifo_addr <= (gfifo_addr + 1);
            end
            if (($signed({1'b0, gfifo_addr}) == (16 - 2))) begin
                fbus_full <= 1'b1;
            end
        end
    end
end


always @(posedge clock, posedge reset) begin: M_FIFO_SHORT_W36_GFIFO_DBG_OCCUPANCY
    if (reset == 1) begin
        gfifo_nvacant <= 16;
        gfifo_ntenant <= 0;
    end
    else begin
        if (clear) begin
            gfifo_nvacant <= 16;
            gfifo_ntenant <= 0;
        end
        else if ((rd && (!wr))) begin
            gfifo_nvacant <= (gfifo_nvacant + 1);
            gfifo_ntenant <= (gfifo_ntenant - 1);
        end
        else if ((wr && (!rd))) begin
            gfifo_nvacant <= (gfifo_nvacant - 1);
            gfifo_ntenant <= (gfifo_ntenant + 1);
        end
    end
end

endmodule
